"""
의도 분류 프롬프트
사용자 메시지를 분석하여 의도를 분류
"""

INTENT_CLASSIFICATION_PROMPT = """
사용자 메시지를 분석하여 의도를 분류하세요.

사용자 메시지: "{message}"

다음 JSON 형태로 **정확히** 응답하세요:
{{
    "intent": "meal_plan",
    "confidence": 0.9,
    "reasoning": "분류 이유"
}}

**중요**: intent 값은 반드시 다음 중 하나여야 합니다:
- "recipe_search" (개별 레시피 검색/생성)
- "meal_plan" (식단표/식단 계획 생성)
- "place_search" (식당 검색)
- "calendar_save" (캘린더 저장)
- "general" (일반 대화)

**각 의도의 실제 처리 방식:**

1. **recipe_search** - 개별 레시피 처리:
   - 하이브리드 검색으로 기존 레시피 찾기
   - 검색 결과 없으면 AI로 새 레시피 생성
   - 개인 프로필(알레르기, 불호식품) 반영
   예: "불고기 레시피", "계란말이 만드는 법", "키토 아침 레시피", "저탄수 디저트"

2. **meal_plan** - 식단표 생성:
   - MealPlannerAgent로 구조화된 식단표 생성
   - 일수별 아침/점심/저녁/간식 계획
   - 개인 프로필 기반 맞춤형 식단
   예: "7일 식단표", "일주일 식단", "이번 주 메뉴 계획", "3일 키토 식단표"

3. **place_search** - 식당 검색:
   - PlaceSearchAgent로 위치 기반 식당 검색
   - 키토 친화적 메뉴 추천
   - 거리/카테고리 필터링
   예: "강남역 근처 식당", "키토 식당 찾아줘", "배달 가능한 곳", "맛집 추천"

4. **calendar_save** - 캘린더 저장:
   - 생성된 식단을 캘린더에 일정으로 저장
   - 충돌 검사 및 해결
   - 타이틀/메모 커스터마이징
   예: "캘린더에 저장", "일정 등록", "재등록", "타이틀 바꿔서 저장"

5. **general** - 일반 대화:
   - 키토 다이어트 관련 질문 답변
   - 프로필 설정 (알레르기, 불호식품 등)
   - 인사 및 일반 대화
   예: "키토 다이어트가 뭐야?", "안녕", "브로콜리 싫어해", "고마워"

**핵심 판단 기준:**
1. **식단표**: "식단표 짜줘", "일주일 메뉴 만들어줘" 등 **기간+구성 요청** → meal_plan
2. **개별 레시피**: "레시피 알려줘", "만드는 법", "조리법 알려줘" 등 **조리 방법 요청** → recipe_search  
3. **장소 검색**: "식당 추천해줘", "근처 맛집 찾아줘" 등 **장소 추천 요청** → place_search
4. **저장 요청**: "캘린더에 저장해줘", "일정 등록해줘" 등 **저장 행위 요청** → calendar_save
5. **일반 대화**: 인사, 결심, 질문, 배경 설명 등 **구체적 행위 요청 없음** → general

**분류 원칙 (반드시 준수):**
1. **명시적 요청 필수**: 행위("~해줘", "알려줘", "만들어줘") + 대상(식단표/레시피/식당)이 **둘 다 명확**해야 해당 의도로 분류
2. **기본값은 general**: 명시적 요청이 없으면 **항상 general**로 분류
3. **추측 금지**: "키토 시작해요", "다이어트 하려고" 같은 결심/배경/의지 표명은 **절대 meal_plan이나 recipe_search로 추론하지 않음**
4. **애매하면 general**: 사용자의 의도가 불명확하거나 모호한 경우 무조건 general
5. **키워드는 보조 수단**: 키워드가 있어도 명시적 행위 요청이 없으면 general

**구체적 예시:**
- ❌ "키토 다이어트를 시작하려고 해" → general (결심 표명, 요청 없음)
- ❌ "키토 하려면 뭐 먹어?" → general (질문, 구체적 요청 없음)
- ✅ "일주일 키토 식단표 짜줘" → meal_plan (명시적 요청)
- ✅ "닭가슴살 레시피 알려줘" → recipe_search (명시적 요청)
- ✅ "강남역 근처 키토 식당 추천해줘" → place_search (명시적 요청)
"""

def get_intent_prompt(message: str) -> str:
    """
    의도 분류 프롬프트 반환
    
    Args:
        message: 사용자 메시지
    
    Returns:
        완성된 프롬프트 문자열
    """
    return INTENT_CLASSIFICATION_PROMPT.format(message=message)
